
# 	A white space or comma separated list of handler class names to be added to the root Logger
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
# 	A white space or comma separated list of class names which will be instantiated when the LogManager is initialized. The constructors of these classes can execute arbitrary configuration code.
#config
# 	Sets the handler classes to use for a given Logger in the hierarchy. Replace the "logger" with a specific name of a Logger in your app (e.g. com.jenkov.web).
#"logger".handlers
# 	Tells a given Logger whether it should log to its parents or not (true or false).
#"logger".useParentHandlers
# 	Tells a given Logger what minimum log level it should log.
#"logger".level

# 	Sets the default log level for all FileHandler's.
java.util.logging.FileHandler.level=ALL
# 	A class name of the Filter to use on all FileHandler's.
java.util.logging.FileHandler.filter=
# 	A class name of the Formatter to use on all FileHandler's.
java.util.logging.FileHandler.formatter=
# 	The encoding to use by all FileHandler's (e.g. UTF-8, UTF-16 etc.).
java.util.logging.FileHandler.encoding=UTF-8
# 	The approximate amount of bytes to write to a log file, before rotating to a new file.
java.util.logging.FileHandler.limit=1000000
# 	The number of log files to use in the log file rotation.
java.util.logging.FileHandler.count=100
# 	Sets whether or not the FileHandler's should append to an existing file or not (true or false), if an existing log file is found.
java.util.logging.FileHandler.append=false
# 	The log file name pattern.
#java.util.logging.FileHandler.pattern

# 	Sets the default log level of all ConsoleHandler's.
java.util.logging.ConsoleHandler.level=ALL
# 	Sets the Filter to use by all ConsoleHandler's
java.util.logging.ConsoleHandler.filter=
# 	Sets the Formatter to use by all ConsoleHandler's.
java.util.logging.ConsoleHandler.formatter=
# 	Sets the encoding to use by all ConsoleHandler's.
java.util.logging.ConsoleHandler.encoding=

# 	Sets the default log level of all StreamHandler's.
java.util.logging.StreamHandler.level=SEVERE
# 	Sets the Filter to use by all StreamHandler's
java.util.logging.StreamHandler.filter=
# 	Sets the Formatter to use by all StreamHandler's.
java.util.logging.StreamHandler.formatter=
# 	Sets the encoding to use by all StreamHandler's.
java.util.logging.StreamHandler.encoding=

# 	Sets the default log level of all SocketHandler's.
java.util.logging.SocketHandler.level=SEVERE
# 	Sets the Filter to use by all SocketHandler's.
java.util.logging.SocketHandler.filter=
# 	Sets the Formatter to use by all SocketHandler's.
java.util.logging.SocketHandler.formatter=
# 	Sets the encoding to use by all SocketHandler's.
java.util.logging.SocketHandler.encoding=
# 	Sets the host name of the host to send the log messages to (e.g. jenkov.com).
java.util.logging.SocketHandler.host=
# 	Sets the port number of of the host to send the log message to (e.g. 9999).
java.util.logging.SocketHandler.port=

# 	Sets the default log level of all MemoryHandler's.
java.util.logging.MemoryHandler.level=SEVERE
# 	Sets the Filter to use by all MemoryHandler's.
java.util.logging.MemoryHandler.filter=
# 	The size of the internal LogRecord buffer.
java.util.logging.MemoryHandler.size=
# 	The push level of messages causing the buffer to be pushed to the target Handler. Defaults to SEVERE.
java.util.logging.MemoryHandler.push=
# 	The class name of the target Handler.
java.util.logging.MemoryHandler.target=